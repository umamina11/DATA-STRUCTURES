"COUNTING SORT"
Counting Sort is a non-comparison-based sorting algorithm
 that works well when there is limited range of input values. 
 It is particularly efficient when the range of input values is small 
 compared to the number of elements to be sorted. The basic idea behind 
 Counting Sort is to count the frequency of each distinct element in 
 the input array and use that information to place the elements in their 
 correct sorted positions.



this algorithm counts the number of occureance of each values, it works with non'
negative discerete values which means it works with whole numbers only
values must be within a specific range

WORKING
As per the above statements this algorithm works on whole number so here is the 
example of array and along with that the working procedure of the array 

2, 5, 9, 8, 2, 8, 7, 10, 4, 3

assume weh have values between range 1 and 10 inclusive 
we have possible 10 values, so we create a counting array of length 10. this is goping to be a seperate array an then 
seperate array in which we input the traversed and use the count 
traverse the input array to track how many of each values are in the input array
use the counting array to track how many of each values are in the input array
Using the counts in the counting array, write the values in sorted order to the input array.

2, 5, 9, 8, 2, 8, 7, 10, 4, 3
 when i=0
0, 1, 0, 0, 0, 0, 0, 0, 0, 0 
when i= 1
0, 1, 0, 0, 1, 0, 0, 0, 0, 0 
when i=2
0, 1,0,0,1,0,0,1,0,0
when i=3
0,1,0,0,1,0,0,1,1,0
when i=4
0,2,0,0,1,0,0,1,1,0
when i=5
0, 2, 0, 0, 2, 0,0,2
when i= 6
0,2,0,0,1,0,1,2,1,0
when i=7
0,2,0,1,1,0,1,2,1,1
when i= 8
0,2,0,1,1,0,1,2,1,1
when i=9
0,2,1,1,1,0,1,2,1,1

now we will write back to the original input array
0, 2, 1, 1, 1, 0, 1, 2, 1, 1

2, 2, 3, 4, ,5 , 7, 8, 8, 9, 10


we traveerse th counting aarray so here we have 0 ones and then 2 twos and so on.....
it is not an inplace algorithm as we have seen as we have to create a countintg arranga nd that depeand of range of values
which have similar lenght will equal to number of elements 
as the range depends on the integrs as for example if the array has values equals to 100, 10000 and the number of elements are then then 
setting the range to 100 or 1000 is not effective 
O(n) can achive as it make assumptions abou tthe data we'r sorting  
if the developer wants to be a stable, we have to do some extra steps


